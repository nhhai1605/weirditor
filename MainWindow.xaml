<Window x:Class="weirditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:weirditor"
        xmlns:viewModels="clr-namespace:weirditor.ViewModels"
        xmlns:models="clr-namespace:weirditor.Models"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:converters="clr-namespace:weirditor.Converters"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        WindowStyle="None"
        Background="Transparent"
        Title="weirditor"
        Height="600"
        Width="800">
    <Window.Resources>
        <converters:FileExplorerIconConverter x:Key="FileExplorerIconConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding NewCommand}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}" />
        <KeyBinding Key="O" Modifiers="Control+Shift" Command="{Binding LoadParentDirectoryCommand}" />
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
        <KeyBinding Key="S" Modifiers="Control+Alt" Command="{Binding SaveAsCommand}" />
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{Binding SaveAllCommand}" />
        <KeyBinding Key="E" Modifiers="Control" Command="{Binding ExplorerVisibilityCommand}" />
    </Window.InputBindings>
    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="0"
            CornerRadius="10"
            GlassFrameThickness="0"
        />
    </WindowChrome.WindowChrome>
    <DockPanel Background="{StaticResource PrimaryBrush}">
        <DockPanel DockPanel.Dock="Top" PreviewMouseLeftButtonDown="Menu_OnMouseLeftButtonDown">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Center"
                        VerticalAlignment="Center" Margin="4">
                <Button Width="12" Height="12" Margin="0,0,8,0"
                        ToolTip="Minimize"
                        Background="{StaticResource  WarningBrush}"
                        Click="Menu_MinimizeButton_Click"
                        Style="{StaticResource MenuActionButton}" />
                <Button Width="12" Height="12"
                        ToolTip="Maximize"
                        Background="{StaticResource  SuccessBrush}"
                        Click="Menu_MaximizeButton_Click"
                        Style="{StaticResource MenuActionButton}" />
                <Button Width="12" Height="12" Margin="8,0,0,0"
                        ToolTip="Close"
                        Background="{StaticResource  ErrorBrush}"
                        Click="Menu_CloseButton_Click"
                        Style="{StaticResource MenuActionButton}" />
            </StackPanel>
            <Menu Background="{StaticResource  PrimaryBrush}">
                <Menu.Items>
                    <!-- Padding on MenuItems -->
                    <MenuItem Header="File" Padding="4">
                        <MenuItem Header="New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N" />
                        <MenuItem Header="Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O" />
                        <MenuItem Header="Open Folder" Command="{Binding LoadParentDirectoryCommand}"
                                  InputGestureText="Ctrl+Shift+O" />
                        <MenuItem Header="Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S" />
                        <MenuItem Header="Save as..." Command="{Binding SaveAsCommand}"
                                  InputGestureText="Ctrl+Alt+S" />
                        <MenuItem Header="Save all" Command="{Binding SaveAllCommand}"
                                  InputGestureText="Ctrl+Shift+S" />
                        <MenuItem Header="Delete" Command="{Binding DeleteCurrentFileCommand}" />
                    </MenuItem>
                    <MenuItem Header="View" Padding="4">
                        <MenuItem Header="File Explorer" Command="{Binding ExplorerVisibilityCommand}"
                                  InputGestureText="Ctrl+E"
                                  IsChecked="{Binding ExploreView.ExplorerSetting.IsExplorerVisible}" />
                    </MenuItem>
                    <MenuItem Header="Setting" Padding="4">
                        <MenuItem Header="Format" Command="{Binding FormatCommand}" />
                        <MenuItem Header="Word Wrap" Command="{Binding WrapCommand}"
                                  IsChecked="{Binding Format.Wrap}" />
                    </MenuItem>
                </Menu.Items>
            </Menu>
        </DockPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" /> <!-- Explorer --> <!-- Column size based on its content -->
                <ColumnDefinition Width="*" /> <!-- Editor --> <!-- The rest of the space -->
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0" Width="200"
                       Visibility="{Binding ExploreView.ExplorerSetting.IsExplorerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <!-- ParentExplorer Name -->
                <ContentControl DockPanel.Dock="Top" Margin="0,2">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <DockPanel>
                                        <!-- TODO: Add Button for New File, .etc here -->
                                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Margin" Value="2,0,0,0" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <Button
                                                Command="{Binding LoadParentDirectoryCommand}"
                                                ToolTip="New File"
                                                Width="20"
                                                Height="20">
                                                <Button.Content>
                                                    <fa:FontAwesome Icon="FileOutline" />
                                                </Button.Content>
                                            </Button>
                                            <Button
                                                Command="{Binding LoadParentDirectoryCommand}"
                                                ToolTip="New Folder"
                                                Width="20"
                                                Height="20">
                                                <Button.Content>
                                                    <fa:FontAwesome Icon="FolderOutline" />
                                                </Button.Content>
                                            </Button>
                                            <Button
                                                Command="{Binding LoadParentDirectoryCommand}"
                                                ToolTip="Open Folder"
                                                Width="20"
                                                Height="20">
                                                <Button.Content>
                                                    <fa:FontAwesome Icon="FolderOutlinepenOutline" />
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>

                                        <TextBlock
                                            Text="{Binding ExploreView.ParentExplorer.Name}"
                                            ToolTip="{Binding ExploreView.ParentExplorer.Path}"
                                            FontWeight="Bold"
                                            FontSize="14"
                                            Margin="4,0"
                                            VerticalAlignment="Center" />
                                    </DockPanel>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <!-- Show Button if ParentExplorer.Name is empty -->
                                <DataTrigger Binding="{Binding ExploreView.ParentExplorer.Name}" Value="">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Button
                                                Content="Open Folder"
                                                Style="{StaticResource CustomButtonStyle}"
                                                Command="{Binding LoadParentDirectoryCommand}" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!-- Explorer -->
                <TreeView ItemsSource="{Binding ExploreView.ParentExplorer.Children}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- Handle double click on item -->
                            <EventSetter Event="MouseDoubleClick" Handler="ExplorerTree_SelectedItemChanged" />

                            <!-- Show menu when right click item -->
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <EventSetter Event="PreviewMouseRightButtonDown"
                                         Handler="ExplorerTree_ItemRightClicked" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Delete">
                                            <!-- Instead of just using Click, I have to do this or I will get casting error -->
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <EventSetter Event="Click"
                                                                 Handler="ExplorerTree_ItemDelete" />
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type models:ExplorerModel}"
                                                  ItemsSource="{Binding Children}">
                            <!-- StackPanel to hold the icon and name -->
                            <StackPanel Orientation="Horizontal">
                                <!-- FontAwesome Icon for Folder -->
                                <fa:FontAwesome
                                    Width="12"
                                    Height="12"
                                    Margin="0,0,4,0"
                                    VerticalAlignment="Center"
                                    Icon="{Binding Path, Converter={StaticResource FileExplorerIconConverter}, ConverterParameter='Icon'}"
                                    Foreground="{Binding Path, Converter={StaticResource FileExplorerIconConverter}, ConverterParameter='Color'}" />

                                <!-- Display the Name of the Directory or File -->
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <!-- This for trigger without double click (simplest method) -->
                    <!-- <behaviors:Interaction.Triggers> -->
                    <!--     <behaviors:EventTrigger EventName="SelectedItemChanged"> -->
                    <!--         <behaviors:InvokeCommandAction  -->
                    <!--             Command="{Binding ExplorerTree_SelectedItemChangedCommand}" -->
                    <!--             CommandParameter="{Binding ElementName=ExplorerTreeView, Path=SelectedItem}" -->
                    <!--         /> -->
                    <!--     </behaviors:EventTrigger> -->
                    <!-- </behaviors:Interaction.Triggers> -->
                </TreeView>
            </DockPanel>

            <!-- Editor -->
            <TabControl Grid.Column="1" Name="EditorTabControl" Margin="2,0,0,0" />
        </Grid>
    </DockPanel>
</Window>